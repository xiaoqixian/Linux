# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-syntax-highlighting zsh-autosuggestions sudo extract)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
source /Users/lunar/clones/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles
export HOMEBREW_NO_AUTO_UPDATE=true
export HOMEBREW_GITHUB_API_TOKEN=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
export http_proxy="http://127.0.0.1:7890"
export https_proxy="http://127.0.0.1:7890"
export inc="/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
export FZF_DEFAULT_COMMAND="fd --exclude={.git,node_modules,build} --type f"
export FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --layout reverse --margin=1,4 --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
export BAT_THEME="Dracula"
export PATH="/Users/lunar/.cargo/bin:$PATH"
export PATH="/Users/lunar/Library/Python/3.8/bin:$PATH"
export PYTHONPATH="/Users/lunar/Library/Python/3.8/lib/python/site-packages"
export RUST="/Users/lunar/clones/rust/library"
#export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --preview '(highlight -0 ansi {} || cat {}) 2> /dev/null | head -500'"

#alias vpn="nohup ~/v2ray-macos-64/v2ray -c ~/v2ray-macos-64/config_bkp.json > /dev/null 2>&1 &"
alias vpn="sh $HOME/linux/sh/v2ray_config.sh"
alias pub="python3 ~/python/code/cnblog_auto_publish.py"
alias sp="ps -A | grep"
alias gcom="git add . && git commit -m"
alias cdinc="cd /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
alias showinc="ls /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include && echo $inc"
alias cinfo="gcc -x c -v -E /dev/null"
alias cppinfo="gcc -x c++ -v -E /dev/null"
alias g++="g++ -std=c++11"
alias gcc="gcc -std=c11"
alias rustc="rustc --edition=2021"
alias std="cd $RUST/std/src && vim lib.rs"
alias core="cd $RUST/core/src && vim lib.rs"
alias kaf="~/Library/kaf-cli_v1.2.5_darwin_amd64/kaf-cli"
alias vim="/usr/local/bin/vim"
alias tre="trans -t zh"
export PATH="/usr/local/opt/openssl@3/bin:$PATH"
#export ALL_PROXY=http://127.0.0.1:7890

function reman {
    LESS="+/^\\s+$2" man "$1"
}

function fs {
    du -h -s "$1" | cut -f1
}
alias sh="/usr/local/Cellar/bash/5.2.15/bin/bash"
#alias rm="sh $HOME/linux/sh/rm_mac.sh"
alias ndl="netease-dl -o ~/music/netease/"
alias sea="brew search"
alias down="brew install"
export arch=/Users/lunar/OrbStack/arch/home/lunar

function ghc {
    git clone https://github.com/$1/$2.git
}
function ghc1 {
    git clone https://github.com/$1/$2.git --depth=1
}
function catline {
    cat -n $1 | gsed -n "/\s$2\s/p"
}
alias me="sh $HOME/Books/me.sh"

function ndll {
    if [[ $# -gt 0 ]]; then
        id=$(( echo $1 | gsed -n -e "s/.*?id\\=\([0-9]\+\).*/\1/p" ))
    else id=$(( pbpaste | gsed -n -e "s/.*?id\\=\([0-9]\+\).*/\1/p" ))
    fi
    netease-dl -o ~/Music/netease song -i $id
}
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
alias imgcat="sh $HOME/linux/sh/imgcat.sh"

function ytm {
    if [[ -f "$HOME/Music/netease/$1.mp3" ]]; then
        echo "file '$HOME/Music/netease/$1.mp3' exists"
        exit 0
    fi
    youtube-dl -x --audio-format mp3 -o $HOME/Music/netease/$1.mp3 $2
}

# alias rm to mv files/dirs to .Trash
trash="$HOME/.Trash"
function rm {
    for target in $@; do
        if [[ -f $target || -d $target ]]; then
            mv $target $trash
        else echo "'$target' not exists"
        fi
    done
}
